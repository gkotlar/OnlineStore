 @model OnlineStore.ViewModels.ProductSearchViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
 {
    <p>
        <a asp-action="Create">Create New</a>
    </p>
 }
<form asp-controller="Products" asp-action="Index" method="get">
     <p>
         <select asp-for="ProductCategory" asp-items="Model.Categories">
            <option value="">All</option>
         </select>
         Product Name: <input type="text" asp-for="NameSearchString" />
         Product Sellers: <input type="text" asp-for="SellerSearchString" />
         Product Manufacturers: <input type="text" asp-for="ManufacturerSearchString" />
         Min Price <input type="number" min="@Model.MinPrice" id="minPrix" asp-for="MinPriceSearchInt"/>
         Max Price <input type="number" max="@Model.MaxPrice" id="maxPrix" asp-for="MaxPriceSearchInt" />
         Order by
         <select class="js-example-basic-single" name="SortOrder" asp-for="SortOrder">
            <option value="">Name Ascending</option>
            <option value="name_desc">Name Descending</option>
            <option value="manufacturer_asc">Manufacturer Ascending</option>
            <option value="manufacturer_desc">Manufacturer Descending</option>
            <option value="price_asc">Price Ascending</option>
            <option value="price_desc">Price Descending</option>
         </select>
         <div>
            <p id="minPrix1"> </p>
            <div id="slider"> </div>
            <br />
            <p id="maxPrix1"> </p>
         </div>
        
        <input type="submit" value="Filter" />
     </p>
    
 </form>


@if (Model.Products.Count.Equals(0))
{
    <div>No items match the criteria</div>
}
else
{
<table class="table">
 
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].PhotoURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].UserManualURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].sellerProducts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].productCategories)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Products) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src="~/Images/@item.PhotoURL" height="100" width="100" alt="" asp-append-version="true" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserManualURL)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer.Name)
            </td>
            <td>
               @foreach (var seller in item.sellerProducts)
               {
                   <a asp-controller="Sellers" asp-action="Details" asp-route-id="@seller.SellerId"> @seller.Seller.Name </a> <br/> 
               }
            </td>
            <td>
                @foreach (var category in item.productCategories)
                {
                    <a asp-controller="Categories" asp-action="Details" asp-route-id="@category.CategoryId"> @category.Category.Name </a> <br />
                }
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details | </a>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {                    
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit | </a>  
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://code.jquery.com/ui/1.13.3/jquery-ui.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.3/themes/smoothness/jquery-ui.css">
     <style>#slider { margin: 10px; }  </style>
     
    <script>
        $(document).ready(function () {
            $( "#slider" ).slider({
                range: true,
                min: @Model.MinPrice,
                max: @Model.MaxPrice,
              //  values: [@Model.MinPriceSearchInt.GetValueOrDefault(0) , @Model.MaxPriceSearchInt.GetValueOrDefault(Model.MaxPrice ?? 1)],
                slide: function( event, ui ) {
                    $( "#minPrix" ).val(ui.values[ 0 ]);
                    $( "#maxPrix" ).val(ui.values[ 1 ]);
                }
            });
            $("#minPrix1").text(@Model.MinPrice.GetValueOrDefault(0));
            $("#maxPrix1").text(@Model.MaxPrice ?? 1);

            $("#slider").slider("values", 0, $("#minPrix").val() )
            $("#slider").slider("values", 1, $("#maxPrix").val() )

            $("#minPrix").keyup( function(){$("#slider").slider("values", 0, $(this).val() ) });
            $("#maxPrix").keyup( function(){$("#slider").slider("values", 1, $(this).val() ) });

            $('.js-example-basic-single').select2();

        });
    </script>
}
