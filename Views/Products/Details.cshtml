@model OnlineStore.ViewModels.ProductReviewsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Product.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Product.PhotoURL)
        </dt>
        <dd class = "col-sm-10">
            <img src="~/Images/@Model.Product.PhotoURL" height="100" width="100" alt="" asp-append-version="true" />
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Product.UserManualURL)
        </dt>
        <dd class = "col-sm-10">
            <button>
                <a href="~/Files/@Model.Product.UserManualURL">
                    @Html.DisplayFor(model => model.Product.UserManualURL)
                </a>
            </button>
        </dd>
        <dt class = "col-sm-2">
            <a asp-action="Details" asp-controller="Manufacturers" asp-route-id="@Model.Product.ManufacturerId">
                @Html.DisplayNameFor(model => model.Product.Manufacturer)
            </a>
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Product.Manufacturer.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.productCategories)
        </dt>
        <dd class="col-sm-10">
            @foreach (var category in Model.Product.productCategories)
            {
                <a asp-controller="Categories" asp-action="Details" asp-route-id="@category.CategoryId">
                    @category.Category.Name
                </a> <br />
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.sellerProducts)
        </dt>
        <dd class="col-sm-10">
            @foreach (var sellerProducts in Model.Product.sellerProducts)
            {
                <a asp-controller="Sellers" asp-action="Details" asp-route-id="@sellerProducts.SellerId">
                    @sellerProducts.Seller.Name
                </a>
                <span> &emsp; Price: @sellerProducts.Price: </span> 

                <form asp-controller="UserProducts" asp-action="Create" method="post">
                    <input type="hidden" asp-for="UserProduct.SellerProductId" name="SellerProductId" value="@sellerProducts.Id" />
                    <input type="hidden" asp-for="UserProduct.UserId" name="UserId" value="@ViewBag.UserId" />
                    <label asp-for="UserProduct.Quantity" class="control-label"></label>
                    <input type="number" asp-for="UserProduct.Quantity" class="form-control" name="Quantity" />
                    <span asp-validation-for="UserProduct.Quantity" class="text-danger"></span>
                    <input type="submit" name="Create" value="Add to cart" />
                </form>

            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.getReviewsCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.getReviewsCount)
        </dd>
          <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.getReviewsAverage)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.getReviewsAverage)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Reviews)
        </dt>
        <dd class="col-sm-10">
            @if(Model.Reviews != null){
                @foreach (var review in Model.Product.Reviews)
                {
                    <a asp-controller="Reviews" asp-action="Details" asp-route-id="@review.Id">
                        @review.UserId                    
                    </a> <br />
                    <p>@review.Comment &emsp; 
                        @if (review.Rating >= 0) {
                            <span>
                                Rating: @review.Rating &ensp;
                                @for(var i = 0; i < @review.Rating.Value; i++)
                                {
                                    <i class="bi bi-star"></i>
                                } 
                            </span>
                        }
                        @if(ViewBag.UserId == review.UserId){
                            <form asp-controller="Reviews" asp-action="Delete" method="post" asp-route-id="@review.Id">
                                <input type="submit" name="Delete" value="Delete" />
                            </form>
                        }
                    </p>

                }
            }else{
                <p>Be the first to comment</p>
            }
        </dd>
        <dt class="col-sm-2">
            Leave a comment
        </dt>
        <dd class="col-sm-10">
            <form asp-controller="Reviews" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>  
                <input asp-for="Reviews.UserId" type="hidden" name="UserId" value="@ViewBag.UserId"/>
                @* <input asp-for="Reviews.UserId" type="hidden" hidden value=@ViewBag.UserId /> *@
                <input asp-for="Reviews.ProductId" type="hidden" name="ProductId" hidden value=@Model.Product.Id />

                <div class="form-group">
                    <label asp-for="Reviews.Comment" class="control-label"></label>
                    <input type="text" asp-for="Reviews.Comment" name="Comment" class="form-control" />
                    <span asp-validation-for="Reviews.Comment" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <div class="rating-card p-4">
                            <div class="star-rating animated-stars">
                                <input type="radio" id="star5" name="Rating" asp-for="Reviews.Rating" value="5">
                                <label for="star5" class="bi bi-star-fill"></label>
                                <input type="radio" id="star4" name="Rating" asp-for="Reviews.Rating" value="4">
                                <label for="star4" class="bi bi-star-fill"></label>
                                <input type="radio" id="star3" name="Rating" asp-for="Reviews.Rating" value="3">
                                <label for="star3" class="bi bi-star-fill"></label>
                                <input type="radio" id="star2" name="Rating" asp-for="Reviews.Rating" value="2">
                                <label for="star2" class="bi bi-star-fill"></label>
                                <input type="radio" id="star1" name="Rating" asp-for="Reviews.Rating" value="1">
                                <label for="star1" class="bi bi-star-fill"></label>
                            </div>
                            <p class="text-muted mt-2">Click to rate</p>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </dd>

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Product.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

    <script>
         $(document).ready(function () {
            document.querySelectorAll('.star-rating:not(.readonly) label').forEach(star => {
                star.addEventListener('click', function() {
                    this.style.transform = 'scale(1.2)';
                    setTimeout(() => {
                        this.style.transform = 'scale(1)';
                    }, 200);
                });
            });        
         });        
    </script>
}
<style>
    .star-rating {
        direction: rtl;
        display: inline-block;
        cursor: pointer;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            color: #ddd;
            font-size: 24px;
            padding: 0 2px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .star-rating label:hover,
            .star-rating label:hover ~ label,
            .star-rating input:checked ~ label {
                color: #ffc107;
            }
</style>